@page "/add-user"
@using StudentsManagement.Client.Models
@using StudentsManagement.Client.ViewModels
@inject NavigationManager navigation;
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Authorization
@inject UserManager<ApplicationUser> usermanager;
@attribute [Authorize]

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Add New System User</h3>
            </div>
            <div class="card-body">
                <EditForm Model="userobject" method="post" OnValidSubmit="RegisterUser" FormName="addNewUser">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">User Name</label>
                                    <InputText for="UserName" class="form-control" @bind-Value="@userobject.UserName" />
                                    <ValidationMessage For="()=>userobject.UserName" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">First Name</label>
                                    <InputText for="FirstName" class="form-control" @bind-Value="@userobject.FirstName" />
                                    <ValidationMessage For="()=>userobject.FirstName" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Middle Name</label>
                                    <InputText for="MiddleName" class="form-control" @bind-Value="@userobject.MiddleName" />
                                    <ValidationMessage For="()=>userobject.MiddleName" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Last Name</label>
                                    <InputText for="LastName" class="form-control" @bind-Value="@userobject.LastName" />
                                    <ValidationMessage For="()=>userobject.LastName" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Photo</label>
                                    <InputFile for="Photo" class="form-control" @bind-Value="@userobject.Photo" />
                                    <ValidationMessage For="()=>userobject.Photo" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Gender</label>
                                    <InputSelect for="GenderId" class="form-control" @bind-Value="@userobject.GenderId">
                                        <option value="">Select Gender</option>
                                        @foreach (var type in Gender)
                                        {
                                            <option value="@type.Id">@type.Description</option>
                                        }
                                    </InputSelect>
                                    <ValidationMessage For="()=>userobject.GenderId" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Email Address</label>
                                    <InputText for="Email" class="form-control" @bind-Value="@userobject.Email" />
                                    <ValidationMessage For="()=>userobject.Email" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Password</label>
                                    <InputText type="password" @bind-Value="userobject.Password" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                                    <label for="password">Password</label>
                                    <ValidationMessage For="() => userobject.Password" class="text-danger" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Confirm Password</label>
                                    <InputText type="password" @bind-Value="userobject.ConfirmPassword" class="form-control" autocomplete="new-password" aria-required="true" placeholder="password" />
                                    <ValidationMessage For="() => userobject.ConfirmPassword" class="text-danger" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">Save User</button>
                            <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
@code {

    [SupplyParameterFromForm]
    private RegisterUserViewModel userobject { get; set; } = new();

    public string UserId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    List<SystemCodeDetail> Gender = new List<SystemCodeDetail>();


    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated)
        {
            var currentuser = await usermanager.GetUserAsync(user);
            UserId = currentuser.Id;
        }
        Gender = await SystemCodeDetailService.GetByCodeAsync("Gender");
    }


    protected async Task RegisterUser()
    {
        var result = UserService.AddAsync(userobject);
        navigation.NavigateTo("/users-list");
    }

    
    public void Cancel()
    {
        navigation.NavigateTo("/academicyears-list");
    }

}
