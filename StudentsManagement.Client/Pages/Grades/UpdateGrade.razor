@page "/grade/edit/{id:int}"
@using StudentsManagement.Client.Models
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Authorization
@inject UserManager<ApplicationUser> usermanager;
@attribute [Authorize]
@rendermode InteractiveServer

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Update Grade Details</h3>
            </div>
            <div class="card-body">
                <EditForm Model="gradeobject" OnValidSubmit="UpdateGradeDetails" FormName="gradedetails">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Grade Code</label>
                                    <InputText for="GradeCode" class="form-control" @bind-Value="@gradeobject.GradeCode" />
                                    <ValidationMessage For="()=>gradeobject.GradeCode" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Grade Name</label>
                                    <InputText for="GradeName" class="form-control" @bind-Value="@gradeobject.GradeName" />
                                    <ValidationMessage For="()=>gradeobject.GradeName" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Grade Point</label>
                                    <InputText for="GradePoint" class="form-control" @bind-Value="@gradeobject.GradePoint" />
                                    <ValidationMessage For="()=>gradeobject.GradePoint" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Mark From</label>
                                    <InputNumber for="MarkFrom" class="form-control" @bind-Value="@gradeobject.MarkFrom" />
                                    <ValidationMessage For="()=>gradeobject.MarkFrom" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Mark To</label>
                                    <InputNumber for="MarkTo" class="form-control" @bind-Value="@gradeobject.MarkTo" />
                                    <ValidationMessage For="()=>gradeobject.MarkTo" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Notes</label>
                                    <InputTextArea for="Notes" class="form-control" @bind-Value="@gradeobject.Notes" />
                                    <ValidationMessage For="()=>gradeobject.Notes" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">Update Grade</button>
                            <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
@code {

    [SupplyParameterFromForm]
    public Grade gradeobject { get; set; } = new();

    [Parameter]
    public int id { get; set; }


    public string UserId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated)
        {
            var currentuser = await usermanager.GetUserAsync(user);
            UserId = currentuser.Id;
        }

        await LoadGrade();
    }
    public async Task LoadGrade()
    {
        gradeobject = await GradesService.GetByIdAsync(id);
    }


    protected async Task UpdateGradeDetails()
    {
        gradeobject.ModifiedById = UserId;
        gradeobject.ModifiedOn = DateTime.Now;
        var result = GradesService.UpdateAsync(gradeobject);
        navigation.NavigateTo("/grades-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/grades-list");
    }
}
