@page "/add-country"
@using StudentsManagement.Client.Models
@inject NavigationManager navigation;
@using StudentsManagement.Client.Models
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Authorization
@inject UserManager<ApplicationUser> usermanager;
@attribute [Authorize]

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Add New Country</h3>
            </div>
            <div class="card-body">
                <EditForm Model="countryobj" OnValidSubmit="CreateCountry" FormName="addCountry">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="col-md-12">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Country Code</label>
                                    <InputText for="Code" class="form-control" @bind-Value="@countryobj.Code" />
                                    <ValidationMessage For="()=>countryobj.Code" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label class="control-label">Country Name</label>
                                    <InputText for="Name" class="form-control" @bind-Value="@countryobj.Name" />
                                    <ValidationMessage For="()=>countryobj.Name" />
                                </div>
                            </div>
                        </div>
                        <div class="form-group mt-4">
                            <button type="submit" class="btn btn-primary">Save Country</button>
                            <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
@code {
    [SupplyParameterFromForm]
    public Country countryobj { get; set; } = new();

    public string UserId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated)
        {
            var currentuser = await usermanager.GetUserAsync(user);
            UserId = currentuser.Id;
        }
    }

    protected async Task CreateCountry()
    {
        countryobj.CreatedOn = DateTime.Now;
        countryobj.CreatedById = UserId;
        var result = GeneralService.AddAsync<Country>(countryobj);
        navigation.NavigateTo("/countries-list");
    }
    public void Cancel()
    {
        navigation.NavigateTo("/countries-list");
    }
}
