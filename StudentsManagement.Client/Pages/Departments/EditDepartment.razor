@page "/department/edit/{id:int}"
@using StudentsManagement.Client.Models
@using Microsoft.AspNetCore.Identity;
@using Microsoft.AspNetCore.Authorization
@inject UserManager<ApplicationUser> usermanager;
@attribute [Authorize]
@inject NavigationManager navigation;
@inject IJSRuntime JsRuntime
@rendermode InteractiveServer

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h3 class="card-title">Update Department Details</h3>
            </div>
            <div class="card-body">
                <EditForm Model="departmentobject" OnValidSubmit="UpdateDepartment" FormName="updateDepartment">
                    <DataAnnotationsValidator />
                    <ValidationSummary />
                    <div class="col-md-12">
                        <div class="col-md-12">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Department Code</label>
                                        <InputText for="Code" class="form-control" @bind-Value="@departmentobject.Code" />
                                        <ValidationMessage For="()=>departmentobject.Code" />
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Department Name</label>
                                        <InputText for="Name" class="form-control" @bind-Value="@departmentobject.Name" />
                                        <ValidationMessage For="()=>departmentobject.Name" />
                                    </div>
                                </div>
                            </div>
                            <div class="form-group mt-4">
                                <button type="submit" class="btn btn-primary">Save Department</button>
                                <button type="button" @onclick="()=>Cancel()" class="btn btn-danger">Back to List</button>
                            </div>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>
@code {

    [SupplyParameterFromForm]
    public Department departmentobject { get; set; } = new();


    [Parameter]
    public int id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        await LoadDepartment();
    }
    public async Task LoadDepartment()
    {
        departmentobject = await DepartmentService.GetByIdAsync(id);
    }


    protected async Task UpdateDepartment()
    {
        var result = DepartmentService.UpdateAsync(departmentobject);
        navigation.NavigateTo("/department-list");
    }
    public void Cancel()
    {
    navigation.NavigateTo("/department-list");
    }
}
